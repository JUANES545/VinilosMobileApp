diff --git a/app/src/main/java/com/example/vinilosmobileapp/MainActivity.kt b/app/src/main/java/com/example/vinilosmobileapp/MainActivity.kt
index 13e366c..56d3e22 100644
--- a/app/src/main/java/com/example/vinilosmobileapp/MainActivity.kt
+++ b/app/src/main/java/com/example/vinilosmobileapp/MainActivity.kt
@@ -3,17 +3,60 @@ package com.example.vinilosmobileapp
 import android.os.Bundle
 import androidx.appcompat.app.AppCompatActivity
 import androidx.appcompat.app.AppCompatDelegate
+import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.ui.NavigationUI
 import com.example.vinilosmobileapp.databinding.ActivityMainBinding

 class MainActivity : AppCompatActivity() {

     private lateinit var binding: ActivityMainBinding

+    private val topLevelDestinations = setOf(
+        R.id.homeFragment,
+        R.id.artistFragment,
+        R.id.favoritesFragment,
+        R.id.profileFragment
+    )
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
+
+        // Set default night mode to light
         AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)

         binding = ActivityMainBinding.inflate(layoutInflater)
         setContentView(binding.root)
+
+        setSupportActionBar(binding.topAppBar)
+
+        val navHostFragment =
+            supportFragmentManager.findFragmentById(R.id.nav_host_fragment) as NavHostFragment
+        val navController = navHostFragment.navController
+
+        // Bottom navigation setup
+        NavigationUI.setupWithNavController(binding.bottomNavigationView, navController)
+
+        // Change title and show/hide back arrow
+        navController.addOnDestinationChangedListener { _, destination, _ ->
+            binding.topAppBar.title = when (destination.id) {
+                R.id.homeFragment -> getString(R.string.title_vinilos)
+                R.id.artistFragment -> getString(R.string.title_artists)
+                R.id.favoritesFragment -> getString(R.string.title_favorites)
+                R.id.profileFragment -> getString(R.string.title_profile)
+                else -> getString(R.string.app_name)
+            }
+
+            // Show back arrow if NOT on a top-level destination
+            val showBackArrow = destination.id !in topLevelDestinations
+            supportActionBar?.setDisplayHomeAsUpEnabled(showBackArrow)
+
+            if (showBackArrow) {
+                binding.topAppBar.setNavigationOnClickListener {
+                    navController.navigateUp()
+                }
+            } else {
+                binding.topAppBar.navigationIcon = null
+            }
+        }
     }
 }
diff --git a/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumDetailProvider.kt b/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumDetailProvider.kt
new file mode 100644
index 0000000..b602dff
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumDetailProvider.kt
@@ -0,0 +1,138 @@
+package com.example.vinilosmobileapp.datasource.local
+
+object AlbumDetailProvider {
+    fun getAlbumById(id: Int): AlbumDetail? = sampleAlbums.find { it.id == id }
+
+    private val sampleAlbums = listOf(
+        AlbumDetail(
+            id = 1,
+            title = "The Dark Side of the Moon",
+            artist = "Pink Floyd",
+            year = 1973,
+            duration = "43 min",
+            genre = "Rock Progresivo",
+            description = "Un álbum conceptual que explora los conflictos que afectan a la vida cotidiana...",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/en/3/3b/Dark_Side_of_the_Moon.png",
+            tracks = listOf(
+                Track("Speak to Me", "1:30"),
+                Track("Breathe", "2:43"),
+                Track("Time", "7:01"),
+                Track("Money", "6:23")
+            ),
+            comments = listOf(
+                Comment(
+                    "Carlos Ruiz",
+                    "Una obra maestra atemporal que sigue siendo relevante hoy en día.",
+                    2
+                ),
+                Comment(
+                    "Ana García",
+                    "La calidad del vinilo es excepcional. Los efectos sonoros son increíbles.",
+                    5
+                )
+            )
+        ),
+        AlbumDetail(
+            id = 2,
+            title = "Abbey Road",
+            artist = "The Beatles",
+            year = 1973,
+            duration = "43 min",
+            genre = "Rock Progresivo",
+            description = "Un álbum conceptual que explora los conflictos que afectan a la vida cotidiana...",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/en/4/42/Beatles_-_Abbey_Road.jpg",
+            tracks = listOf(
+                Track("Speak to Me", "1:30"),
+                Track("Breathe", "2:43"),
+                Track("Time", "7:01"),
+                Track("Money", "6:23")
+            ),
+            comments = listOf(
+                Comment(
+                    "Carlos Ruiz",
+                    "Una obra maestra atemporal que sigue siendo relevante hoy en día.",
+                    2
+                ),
+                Comment(
+                    "Ana García",
+                    "La calidad del vinilo es excepcional. Los efectos sonoros son increíbles.",
+                    5
+                )
+            )
+        ),
+        AlbumDetail(
+            id = 3,
+            title = "Kind of Blue",
+            artist = "Miles Davis",
+            year = 1973,
+            duration = "43 min",
+            genre = "Rock Progresivo",
+            description = "Un álbum conceptual que explora los conflictos que afectan a la vida cotidiana...",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/commons/a/ad/Kind_of_Blue_%281959%2C_CL_1355%29_album_cover.jpg",
+            tracks = listOf(
+                Track("Speak to Me", "1:30"),
+                Track("Breathe", "2:43"),
+                Track("Time", "7:01"),
+                Track("Money", "6:23")
+            ),
+            comments = listOf(
+                Comment(
+                    "Carlos Ruiz",
+                    "Una obra maestra atemporal que sigue siendo relevante hoy en día.",
+                    2
+                ),
+                Comment(
+                    "Ana García",
+                    "La calidad del vinilo es excepcional. Los efectos sonoros son increíbles.",
+                    5
+                )
+            )
+        ),
+        AlbumDetail(
+            id = 4,
+            title = "Renaissance",
+            artist = "Beyoncé",
+            year = 2018,
+            duration = "43 min",
+            genre = "Rock Progresivo",
+            description = "Un álbum conceptual que explora los conflictos que afectan a la vida cotidiana...",
+            imageUrl = "https://miro.medium.com/v2/resize:fit:1031/1*YZGOlFZMuxa37pVPnkp6jA.jpeg",
+            tracks = listOf(
+                Track("Speak to Me", "1:30"),
+                Track("Breathe", "2:43"),
+                Track("Time", "7:01"),
+                Track("Money", "6:23")
+            ),
+            comments = listOf(
+                Comment(
+                    "Carlos Ruiz",
+                    "Una obra maestra atemporal que sigue siendo relevante hoy en día.",
+                    2
+                ),
+                Comment(
+                    "Ana García",
+                    "La calidad del vinilo es excepcional. Los efectos sonoros son increíbles.",
+                    5
+                )
+            )
+        ),
+
+
+    )
+}
+
+data class AlbumDetail(
+    val id: Int,
+    val title: String,
+    val artist: String,
+    val year: Int,
+    val duration: String,
+    val genre: String,
+    val description: String,
+    val imageUrl: String,
+    val tracks: List<Track>,
+    val comments: List<Comment>
+)
+
+data class Track(val title: String, val duration: String)
+data class Comment(val user: String, val text: String, val daysAgo: Int)
diff --git a/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumProvider.kt b/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumProvider.kt
new file mode 100644
index 0000000..5ab72df
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/datasource/local/AlbumProvider.kt
@@ -0,0 +1,32 @@
+package com.example.vinilosmobileapp.datasource.local
+
+import com.example.vinilosmobileapp.model.Album
+
+object AlbumProvider {
+    fun getAlbums(): List<Album> = listOf(
+        Album(
+            id = 1,
+            title = "Dark Side of the Moon",
+            artist = "Pink Floyd",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/en/3/3b/Dark_Side_of_the_Moon.png"
+        ),
+        Album(
+            id = 2,
+            title = "Abbey Road",
+            artist = "The Beatles",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/en/4/42/Beatles_-_Abbey_Road.jpg"
+        ),
+        Album(
+            id = 3,
+            title = "Kind of Blue",
+            artist = "Miles Davis",
+            imageUrl = "https://upload.wikimedia.org/wikipedia/commons/a/ad/Kind_of_Blue_%281959%2C_CL_1355%29_album_cover.jpg"
+        ),
+        Album(
+            id = 4,
+            title = "Renaissance",
+            artist = "Beyoncé",
+            imageUrl = "https://miro.medium.com/v2/resize:fit:1031/1*YZGOlFZMuxa37pVPnkp6jA.jpeg"
+        )
+    )
+}
diff --git a/app/src/main/java/com/example/vinilosmobileapp/model/Album.kt b/app/src/main/java/com/example/vinilosmobileapp/model/Album.kt
new file mode 100644
index 0000000..baa2d28
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/model/Album.kt
@@ -0,0 +1,8 @@
+package com.example.vinilosmobileapp.model
+
+data class Album(
+    val id: Int,
+    val title: String,
+    val artist: String,
+    val imageUrl: String
+)
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt
new file mode 100644
index 0000000..05f16c2
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt
@@ -0,0 +1,38 @@
+package com.example.vinilosmobileapp.ui.album
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.viewModels
+import com.example.vinilosmobileapp.R
+import com.example.vinilosmobileapp.databinding.FragmentCreateAlbumBinding
+
+class CreateAlbumFragment : Fragment() {
+
+    private var _binding: FragmentCreateAlbumBinding? = null
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding = FragmentCreateAlbumBinding.inflate(inflater, container, false)
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        (requireActivity() as AppCompatActivity).supportActionBar?.title =
+            getString(R.string.create_new_album)
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModel.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModel.kt
new file mode 100644
index 0000000..0f9d13e
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModel.kt
@@ -0,0 +1,17 @@
+package com.example.vinilosmobileapp.ui.album
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+
+class CreateAlbumViewModel : ViewModel() {
+
+    private val _albumCreated = MutableLiveData<Boolean>()
+    val albumCreated: LiveData<Boolean> = _albumCreated
+
+    fun submitAlbum(name: String, year: Int, artist: String, genre: String) {
+        // Here you'd call your use case or repository
+        // Fake success callback
+        _albumCreated.value = true
+    }
+}
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/album/DetailAlbumFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/album/DetailAlbumFragment.kt
new file mode 100644
index 0000000..83ed5f1
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/album/DetailAlbumFragment.kt
@@ -0,0 +1,60 @@
+package com.example.vinilosmobileapp.ui.album
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.appcompat.app.AppCompatActivity
+import androidx.fragment.app.Fragment
+import com.bumptech.glide.Glide
+import com.example.vinilosmobileapp.R
+import com.example.vinilosmobileapp.databinding.FragmentDetailAlbumBinding
+import com.example.vinilosmobileapp.datasource.local.AlbumDetailProvider
+
+class DetailAlbumFragment : Fragment() {
+
+    private var _binding: FragmentDetailAlbumBinding? = null
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding = FragmentDetailAlbumBinding.inflate(inflater, container, false)
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        (requireActivity() as AppCompatActivity).supportActionBar?.title =
+            getString(R.string.detail_album)
+
+        val albumId = arguments?.getInt("albumId") ?: return
+        val album = AlbumDetailProvider.getAlbumById(albumId)
+
+        album?.let {
+            binding.albumTitle.text = it.title
+            binding.albumArtist.text = it.artist
+            binding.albumYear.text = "${it.year} · ${it.duration} · ${it.genre}"
+            binding.albumDescription.text = it.description
+
+            Glide.with(this).load(it.imageUrl).into(binding.albumImage)
+
+            // Lista de canciones (simplificada)
+            binding.trackList.text =
+                it.tracks.joinToString("\n") { track -> "${track.title}    ${track.duration}" }
+
+            // Comentarios
+            binding.comments.text = it.comments.joinToString("\n\n") { comment ->
+                "${comment.user}:\n${comment.text}\nHace ${comment.daysAgo} días"
+            }
+        }
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/home/HomeFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/home/HomeFragment.kt
index 9406ceb..03988c0 100644
--- a/app/src/main/java/com/example/vinilosmobileapp/ui/home/HomeFragment.kt
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/home/HomeFragment.kt
@@ -6,8 +6,11 @@ import android.view.View
 import android.view.ViewGroup
 import androidx.fragment.app.Fragment
 import androidx.navigation.fragment.findNavController
+import androidx.recyclerview.widget.GridLayoutManager
 import com.example.vinilosmobileapp.R
 import com.example.vinilosmobileapp.databinding.FragmentHomeBinding
+import com.example.vinilosmobileapp.datasource.local.AlbumProvider
+import com.example.vinilosmobileapp.ui.home.adapter.AlbumAdapter

 class HomeFragment : Fragment() {

@@ -25,8 +28,18 @@ class HomeFragment : Fragment() {
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)

-        binding.buttonCreateAlbum.setOnClickListener {
-            // Acción definida en nav_graph.xml
+        // Setup RecyclerView
+        val albumAdapter = AlbumAdapter(AlbumProvider.getAlbums()) { albumId ->
+            val bundle = Bundle().apply {
+                putInt("albumId", albumId)
+            }
+            findNavController().navigate(R.id.detailAlbumFragment, bundle)
+        }
+
+        binding.recyclerViewAlbums.layoutManager = GridLayoutManager(context, 2)
+        binding.recyclerViewAlbums.adapter = albumAdapter
+
+        binding.fabCreateAlbum.setOnClickListener {
             findNavController().navigate(R.id.action_homeFragment_to_createAlbumFragment)
         }
     }
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt
new file mode 100644
index 0000000..c7329e9
--- /dev/null
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt
@@ -0,0 +1,41 @@
+package com.example.vinilosmobileapp.ui.home.adapter
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.example.vinilosmobileapp.databinding.ItemAlbumBinding
+import com.example.vinilosmobileapp.model.Album
+
+class AlbumAdapter(private val albumList: List<Album>, private val onClick: (Int) -> Unit) :
+    RecyclerView.Adapter<AlbumAdapter.AlbumViewHolder>() {
+
+    inner class AlbumViewHolder(private val binding: ItemAlbumBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        fun bind(album: Album) {
+            binding.textViewAlbumName.text = album.title
+            binding.textViewArtist.text = album.artist
+
+            Glide.with(binding.root.context)
+                .load(album.imageUrl)
+                .centerCrop()
+                .into(binding.imageViewAlbumCover)
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): AlbumViewHolder {
+        val binding = ItemAlbumBinding.inflate(LayoutInflater.from(parent.context), parent, false)
+        return AlbumViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: AlbumViewHolder, position: Int) {
+        val album = albumList[position]
+        holder.bind(album)
+        holder.itemView.setOnClickListener {
+            onClick(album.id)
+        }
+    }
+
+    override fun getItemCount(): Int = albumList.size
+}
diff --git a/app/src/main/res/drawable/ic_search.xml b/app/src/main/res/drawable/ic_search.xml
new file mode 100644
index 0000000..8609d03
--- /dev/null
+++ b/app/src/main/res/drawable/ic_search.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="960"
+    android:viewportHeight="960">
+  <path
+      android:pathData="M784,840 L532,588q-30,24 -69,38t-83,14q-109,0 -184.5,-75.5T120,380q0,-109 75.5,-184.5T380,120q109,0 184.5,75.5T640,380q0,44 -14,83t-38,69l252,252 -56,56ZM380,560q75,0 127.5,-52.5T560,380q0,-75 -52.5,-127.5T380,200q-75,0 -127.5,52.5T200,380q0,75 52.5,127.5T380,560Z"
+      android:fillColor="#e3e3e3"/>
+</vector>
diff --git a/app/src/main/res/layout/fragment_create_album.xml b/app/src/main/res/layout/fragment_create_album.xml
index 66039d7..6d7166f 100644
--- a/app/src/main/res/layout/fragment_create_album.xml
+++ b/app/src/main/res/layout/fragment_create_album.xml
@@ -2,6 +2,7 @@
 <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:background="@color/white_background"
     android:padding="16dp">

     <LinearLayout
diff --git a/app/src/main/res/layout/fragment_detail_album.xml b/app/src/main/res/layout/fragment_detail_album.xml
new file mode 100644
index 0000000..861e0a0
--- /dev/null
+++ b/app/src/main/res/layout/fragment_detail_album.xml
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white_background">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <ImageView
+            android:id="@+id/albumImage"
+            android:layout_width="match_parent"
+            android:layout_height="200dp"
+            android:scaleType="centerCrop" />
+
+        <TextView
+            android:id="@+id/albumTitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:textSize="18sp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/albumArtist"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textColor="@android:color/darker_gray"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/albumYear"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textColor="@android:color/darker_gray"
+            android:textSize="14sp" />
+
+        <TextView
+            android:id="@+id/albumDescription"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:textSize="14sp" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="Canciones"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/trackList"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="Comentarios"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/comments"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+
+    </LinearLayout>
+</ScrollView>
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
index aa8c8d6..9da9fe5 100644
--- a/app/src/main/res/layout/fragment_home.xml
+++ b/app/src/main/res/layout/fragment_home.xml
@@ -2,29 +2,51 @@
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:background="@color/white_background"
+    android:paddingVertical="16dp">

-    <TextView
-        android:id="@+id/home_title"
-        android:layout_width="wrap_content"
+    <com.google.android.material.textfield.TextInputLayout
+        android:id="@+id/search_input_layout"
+        android:layout_width="0dp"
         android:layout_height="wrap_content"
-        android:layout_marginTop="32dp"
-        android:text="Bienvenido, coleccionista"
-        android:textSize="20sp"
-        android:textStyle="bold"
+        android:layout_marginHorizontal="16dp"
+        android:hint="Buscar álbumes..."
+        app:boxBackgroundMode="outline"
+        app:boxCornerRadiusBottomEnd="24dp"
+        app:boxCornerRadiusBottomStart="24dp"
+        app:boxCornerRadiusTopEnd="24dp"
+        app:boxCornerRadiusTopStart="24dp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_constraintTop_toTopOf="parent"
+        app:startIconDrawable="@drawable/ic_search">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/search_input"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:inputType="text" />
+    </com.google.android.material.textfield.TextInputLayout>

-    <Button
-        android:id="@+id/button_create_album"
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recyclerView_albums"
         android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginHorizontal="32dp"
-        android:layout_marginTop="24dp"
-        android:text="Crear nuevo álbum"
+        android:layout_height="0dp"
+        android:layout_marginTop="16dp"
+        app:layout_constraintBottom_toTopOf="@+id/fab_create_album"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/home_title" />
+        app:layout_constraintTop_toBottomOf="@id/search_input_layout" />

+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/fab_create_album"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="16dp"
+        android:contentDescription="Crear álbum"
+        android:src="@drawable/ic_add"
+        app:backgroundTint="@color/purple_500"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
 </androidx.constraintlayout.widget.ConstraintLayout>
diff --git a/app/src/main/res/layout/item_album.xml b/app/src/main/res/layout/item_album.xml
new file mode 100644
index 0000000..911a652
--- /dev/null
+++ b/app/src/main/res/layout/item_album.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    app:cardCornerRadius="12dp"
+    app:cardElevation="4dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="8dp">
+
+        <ImageView
+            android:id="@+id/imageViewAlbumCover"
+            android:layout_width="match_parent"
+            android:layout_height="160dp"
+            android:scaleType="centerCrop" />
+
+        <TextView
+            android:id="@+id/textViewAlbumName"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:paddingTop="4dp"
+            android:text="Album Name"
+            android:textColor="@color/black"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/textViewArtist"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Artist Name" />
+    </LinearLayout>
+
+</com.google.android.material.card.MaterialCardView>
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
index 30f104c..d6e09a1 100644
--- a/app/src/main/res/navigation/nav_graph.xml
+++ b/app/src/main/res/navigation/nav_graph.xml
@@ -8,13 +8,37 @@
         android:id="@+id/homeFragment"
         android:name="com.example.vinilosmobileapp.ui.home.HomeFragment"
         android:label="Home">
-        <action
-            android:id="@+id/action_homeFragment_to_createAlbumFragment"
-            app:destination="@id/createAlbumFragment" />
+    <action
+        android:id="@+id/action_homeFragment_to_createAlbumFragment"
+        app:destination="@id/createAlbumFragment" />
     </fragment>

     <fragment
         android:id="@+id/createAlbumFragment"
-        android:name="com.example.vinilosmobileapp.ui.createalbum.CreateAlbumFragment"
-        android:label="Create Album" />
+        android:name="com.example.vinilosmobileapp.ui.album.CreateAlbumFragment"
+        android:label="Crear Álbum" />
+
+    <fragment
+        android:id="@+id/detailAlbumFragment"
+        android:name="com.example.vinilosmobileapp.ui.album.DetailAlbumFragment"
+        android:label="Detalle Álbum">
+        <argument
+            android:name="albumId"
+            app:argType="integer" />
+    </fragment>
+
+    <fragment
+        android:id="@+id/artistFragment"
+        android:name="com.example.vinilosmobileapp.ui.artist.ArtistFragment"
+        android:label="Artistas" />
+
+    <fragment
+        android:id="@+id/favoritesFragment"
+        android:name="com.example.vinilosmobileapp.ui.favorites.FavoritesFragment"
+        android:label="Favoritos" />
+
+    <fragment
+        android:id="@+id/profileFragment"
+        android:name="com.example.vinilosmobileapp.ui.profile.ProfileFragment"
+        android:label="Perfil" />
 </navigation>
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index 02e7be9..7afb112 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -1,3 +1,21 @@
 <resources>
     <string name="app_name">VinilosMobileApp</string>
+
+    <!-- Home screen -->
+    <string name="title_vinilos">Vinilos</string>
+    <string name="title_artists">Artistas</string>
+    <string name="title_favorites">Favoritos</string>
+    <string name="title_profile">Perfil</string>
+
+    <!-- Album screen -->
+    <string name="create_new_album">Crear Nuevo Álbum</string>
+    <string name="detail_album">Detalles del Álbum</string>
+
+
+    <!-- Artist screen -->
+
+
+    <!-- Favorites screen -->
+
+
 </resources>
diff --git a/app/src/test/java/com/example/vinilosmobileapp/datasource/local/AlbumProviderTest.kt b/app/src/test/java/com/example/vinilosmobileapp/datasource/local/AlbumProviderTest.kt
new file mode 100644
index 0000000..c1da062
--- /dev/null
+++ b/app/src/test/java/com/example/vinilosmobileapp/datasource/local/AlbumProviderTest.kt
@@ -0,0 +1,19 @@
+package com.example.vinilosmobileapp.datasource.local
+
+import org.junit.Assert.*
+import org.junit.Test
+
+class AlbumProviderTest {
+
+    @Test
+    fun `getAlbums returns correct number of albums`() {
+        val albums = AlbumProvider.getAlbums()
+        assertEquals(4, albums.size)
+    }
+
+    @Test
+    fun `first album has expected title`() {
+        val album = AlbumProvider.getAlbums().first()
+        assertEquals("Dark Side of the Moon", album.title)
+    }
+}
diff --git a/app/src/test/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModelTest.kt b/app/src/test/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModelTest.kt
new file mode 100644
index 0000000..d503c1a
--- /dev/null
+++ b/app/src/test/java/com/example/vinilosmobileapp/ui/album/CreateAlbumViewModelTest.kt
@@ -0,0 +1,43 @@
+package com.example.vinilosmobileapp.ui.album
+
+import androidx.arch.core.executor.testing.InstantTaskExecutorRule
+import androidx.lifecycle.Observer
+import org.junit.Assert.*
+import org.junit.Before
+import org.junit.Rule
+import org.junit.Test
+
+class CreateAlbumViewModelTest {
+
+    @get:Rule
+    val instantExecutorRule = InstantTaskExecutorRule()
+
+    private lateinit var viewModel: CreateAlbumViewModel
+
+    @Before
+    fun setUp() {
+        viewModel = CreateAlbumViewModel()
+    }
+
+    @Test
+    fun `submitAlbum sets albumCreated to true`() {
+        // Observamos LiveData sin hacer nada, solo para activar el observer
+        val observer = Observer<Boolean> {}
+        try {
+            viewModel.albumCreated.observeForever(observer)
+
+            viewModel.submitAlbum(
+                name = "Test Album",
+                year = 2023,
+                artist = "Test Artist",
+                genre = "Rock"
+            )
+
+            val result = viewModel.albumCreated.value
+            assertTrue(result == true)
+
+        } finally {
+            viewModel.albumCreated.removeObserver(observer)
+        }
+    }
+}
