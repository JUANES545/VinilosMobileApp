Subject: [PATCH] favorites behaviour v2
---
Index: app/src/main/res/layout/item_prize.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_prize.xml b/app/src/main/res/layout/item_prize.xml
--- a/app/src/main/res/layout/item_prize.xml	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/res/layout/item_prize.xml	(date 1746415640601)
@@ -1,36 +1,49 @@
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:background="@android:color/white"
-    android:elevation="2dp"
-    android:orientation="vertical"
-    android:padding="16dp">
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_marginHorizontal="4dp"
+    android:layout_marginTop="4dp"
+    android:layout_marginBottom="8dp"
+    android:background="@color/white"
+    card_view:cardCornerRadius="12dp"
+    card_view:cardElevation="4dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:paddingHorizontal="16dp"
+        android:paddingVertical="8dp">
 
-    <TextView
-        android:id="@+id/tvPrizeName"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="8dp"
-        android:textColor="@android:color/black"
-        android:textSize="18sp"
-        android:textStyle="bold"
-        tools:text="Grammy Award" />
+        <TextView
+            android:id="@+id/tvPrizeName"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="8dp"
+            android:textColor="@android:color/black"
+            android:textSize="18sp"
+            android:textStyle="bold"
+            tools:text="Grammy Award" />
 
-    <TextView
-        android:id="@+id/tvOrganization"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="4dp"
-        android:textColor="@android:color/darker_gray"
-        android:textSize="14sp"
-        tools:text="MTV Music Awards" />
+        <TextView
+            android:id="@+id/tvOrganization"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="4dp"
+            android:textColor="@android:color/darker_gray"
+            android:textSize="14sp"
+            tools:text="MTV Music Awards" />
 
-    <TextView
-        android:id="@+id/tvDateAwarded"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:textColor="@android:color/darker_gray"
-        android:textSize="12sp"
-        tools:text="30/12/2023" />
-</LinearLayout>
\ No newline at end of file
+        <TextView
+            android:id="@+id/tvDateAwarded"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@android:color/darker_gray"
+            android:textSize="12sp"
+            tools:text="30/12/2023" />
+    </LinearLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_create_artist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_create_artist.xml b/app/src/main/res/layout/fragment_create_artist.xml
--- a/app/src/main/res/layout/fragment_create_artist.xml	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/res/layout/fragment_create_artist.xml	(date 1746410063053)
@@ -95,6 +95,59 @@
                     android:visibility="gone" />
             </LinearLayout>
 
+            <!-- Sección de agregar álbumes -->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="24dp"
+                android:text="Lista de Álbumes"
+                android:textStyle="bold" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/recyclerViewAlbums"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="8dp"
+                android:overScrollMode="never" />
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/button_add_album"
+                android:layout_width="wrap_content"
+                android:layout_gravity="center"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="8dp"
+                android:text="Agregar Álbum"
+                android:textAllCaps="false"
+                app:icon="@drawable/ic_add"
+                app:iconGravity="textStart" />
+
+            <!-- Sección de agregar premios -->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="24dp"
+                android:text="Lista de Premios"
+                android:textStyle="bold" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/recyclerViewPrizes"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="8dp"
+                android:overScrollMode="never" />
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/button_add_prize"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginTop="8dp"
+                android:layout_marginBottom="26dp"
+                android:text="Agregar Premio"
+                android:textAllCaps="false"
+                app:icon="@drawable/ic_add"
+                app:iconGravity="textStart" />
+
         </LinearLayout>
     </androidx.core.widget.NestedScrollView>
 
Index: app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/home/adapter/AlbumAdapter.kt	(date 1746413317047)
@@ -9,8 +9,8 @@
 import com.example.vinilosmobileapp.model.Album
 
 class AlbumAdapter(
-    private var albumList: List<Album>,
-    private val onClick: (Int) -> Unit
+    var albumList: List<Album>,
+    val onClick: (Int) -> Unit
 ) : RecyclerView.Adapter<AlbumAdapter.AlbumViewHolder>() {
 
     inner class AlbumViewHolder(private val binding: ItemAlbumBinding) :
Index: app/src/main/java/com/example/vinilosmobileapp/ui/artist/ArtistFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/artist/ArtistFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/ArtistFragment.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/ui/artist/ArtistFragment.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/ArtistFragment.kt	(date 1746415763208)
@@ -4,6 +4,7 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
 import androidx.fragment.app.Fragment
 import androidx.fragment.app.setFragmentResultListener
@@ -12,9 +13,18 @@
 import androidx.recyclerview.widget.GridLayoutManager
 import com.example.vinilosmobileapp.R
 import com.example.vinilosmobileapp.databinding.FragmentArtistBinding
+import com.example.vinilosmobileapp.datasource.remote.ArtistServiceAdapter
 import com.example.vinilosmobileapp.model.Artist
+import com.example.vinilosmobileapp.model.Prize
+import com.example.vinilosmobileapp.model.dto.PrizeCreateDTO
 import com.example.vinilosmobileapp.ui.artist.adapter.ArtistAdapter
 import com.example.vinilosmobileapp.utils.FavoritesManager
+import com.example.vinilosmobileapp.utils.RandomDataProvider.awardNames
+import com.example.vinilosmobileapp.utils.RandomDataProvider.descriptions
+import com.example.vinilosmobileapp.utils.RandomDataProvider.organizations
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
 
 class ArtistFragment : Fragment() {
 
@@ -35,6 +45,7 @@
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
+        ensurePrizesSeeded()
         setupRecyclerView()
         setupFabListeners()
         setupSwipeRefresh()
@@ -44,6 +55,59 @@
         setupFabListeners()
     }
 
+    private fun ensurePrizesSeeded() {
+        ArtistServiceAdapter.getPrizes().enqueue(object : Callback<List<Prize>> {
+            override fun onResponse(call: Call<List<Prize>>, response: Response<List<Prize>>) {
+                if (response.isSuccessful && response.body().isNullOrEmpty()) {
+                    seedPrizes()
+                }
+            }
+
+            override fun onFailure(call: Call<List<Prize>>, t: Throwable) {
+                seedPrizes()
+            }
+        })
+    }
+
+    private fun seedPrizes() {
+        organizations.forEach { label ->
+            // elegimos aleatoriamente organization / name / description
+            val dto = PrizeCreateDTO(
+                organization = organizations.random(),
+                name = awardNames.random() + " – $label",
+                description = descriptions.random()
+            )
+            ArtistServiceAdapter.createPrize(dto)
+                .enqueue(object : Callback<Prize> {
+                    override fun onResponse(call: Call<Prize>, rsp: Response<Prize>) {
+                        if (rsp.isSuccessful) {
+                            Toast.makeText(
+                                requireContext(),
+                                "⚙️ Prize creado: ${rsp.body()?.id}",
+                                Toast.LENGTH_SHORT
+                            ).show()
+                        } else {
+                            Toast.makeText(
+                                requireContext(),
+                                "❌ Error creando prize: ${rsp.code()} – ${
+                                    rsp.errorBody()?.string()
+                                }",
+                                Toast.LENGTH_LONG
+                            ).show()
+                        }
+                    }
+
+                    override fun onFailure(call: Call<Prize>, t: Throwable) {
+                        Toast.makeText(
+                            requireContext(),
+                            "❌ Red al crear prize: ${t.localizedMessage}",
+                            Toast.LENGTH_LONG
+                        ).show()
+                    }
+                })
+        }
+    }
+
     private fun setupRecyclerView() {
         artistAdapter = ArtistAdapter(emptyList()) { artistId ->
             val args = Bundle().apply { putInt("artistId", artistId) }
Index: app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/album/CreateAlbumFragment.kt	(date 1746410063040)
@@ -50,7 +50,7 @@
     private lateinit var trackInputAdapter: TrackInputAdapter
 
     private val genreOptions = RandomDataProvider.genreOptions
-    private val artistOptions = RandomDataProvider.artistOptions
+    private val artistOptions = RandomDataProvider.recordLabels
 
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
Index: app/src/main/java/com/example/vinilosmobileapp/ui/artist/CreateArtistFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/artist/CreateArtistFragment.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/CreateArtistFragment.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/ui/artist/CreateArtistFragment.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/CreateArtistFragment.kt	(date 1746414709024)
@@ -1,21 +1,36 @@
 package com.example.vinilosmobileapp.ui.artist
 
 import android.app.DatePickerDialog
+import android.content.DialogInterface
 import android.os.Bundle
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.ArrayAdapter
 import android.widget.ImageView
+import android.widget.TextView
 import android.widget.Toast
 import androidx.fragment.app.Fragment
 import androidx.fragment.app.setFragmentResult
 import androidx.fragment.app.viewModels
 import androidx.navigation.fragment.findNavController
+import androidx.recyclerview.widget.LinearLayoutManager
 import coil.load
 import com.example.vinilosmobileapp.R
 import com.example.vinilosmobileapp.databinding.FragmentCreateArtistBinding
+import com.example.vinilosmobileapp.datasource.remote.AlbumServiceAdapter
+import com.example.vinilosmobileapp.datasource.remote.ArtistServiceAdapter
+import com.example.vinilosmobileapp.model.Album
+import com.example.vinilosmobileapp.model.Prize
 import com.example.vinilosmobileapp.model.dto.ArtistCreateDTO
+import com.example.vinilosmobileapp.ui.artist.adapter.PrizeInputAdapter
+import com.example.vinilosmobileapp.ui.home.adapter.AlbumAdapter
 import com.example.vinilosmobileapp.utils.RandomDataProvider
+import com.google.android.material.dialog.MaterialAlertDialogBuilder
+import com.google.android.material.textfield.MaterialAutoCompleteTextView
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
 import java.text.SimpleDateFormat
 import java.util.*
 
@@ -28,6 +43,9 @@
     private val sdf = SimpleDateFormat("yyyy-MM-dd'T'00:00:00.000'Z'", Locale.getDefault())
     private var selectedPhotoUrl: String? = null
 
+    private lateinit var albumAdapter: AlbumAdapter
+    private lateinit var prizeAdapter: PrizeInputAdapter
+
     override fun onCreateView(i: LayoutInflater, c: ViewGroup?, s: Bundle?) =
         FragmentCreateArtistBinding.inflate(i, c, false).also { _binding = it }.root
 
@@ -37,9 +55,13 @@
         setupArtistName()
         setupBirthDateCalendar()
         setupDescription()
+        setupAdapters()
 
         binding.imageUploadContainer.setOnClickListener { loadRandomProfilePhoto() }
 
+        binding.buttonAddAlbum.setOnClickListener { showAddAlbumDialog() }
+        binding.buttonAddPrize.setOnClickListener { showAddPrizeDialog() }
+
         binding.btnCreateArtist.setOnClickListener {
             var valid = true
             listOf(binding.tilName, binding.tilBirth, binding.tilDesc).forEach { it.error = null }
@@ -77,6 +99,145 @@
             }
         }
     }
+
+    private fun setupAdapters() {
+        // Reutilizamos el AlbumAdapter de la carpeta home
+        albumAdapter = AlbumAdapter(emptyList()) { albumId ->
+            Toast.makeText(requireContext(), "Álbum seleccionado: $albumId", Toast.LENGTH_SHORT)
+                .show()
+        }
+
+        binding.recyclerViewAlbums.apply {
+            layoutManager = LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false)
+            adapter = albumAdapter
+        }
+
+        prizeAdapter = PrizeInputAdapter(mutableListOf())
+        binding.recyclerViewPrizes.apply {
+            layoutManager = LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, false)
+            adapter = prizeAdapter
+        }
+    }
+
+    private fun showAddAlbumDialog() {
+        val dialogView = layoutInflater.inflate(R.layout.dialog_add_album, null)
+        val dropdownAlbum =
+            dialogView.findViewById<MaterialAutoCompleteTextView>(R.id.dropdown_album)
+        val guestHint = dialogView.findViewById<TextView>(R.id.guest_hint)
+
+        val builder = MaterialAlertDialogBuilder(requireContext())
+            .setTitle("Selecciona un álbum")
+            .setView(dialogView)
+            .setPositiveButton("Agregar", null)
+            .setNegativeButton("Cancelar", null)
+
+        val dialog = builder.create()
+        dialog.show()
+
+        AlbumServiceAdapter.getAlbums().enqueue(object : Callback<List<Album>> {
+            override fun onResponse(call: Call<List<Album>>, resp: Response<List<Album>>) {
+                val list = resp.body().orEmpty()
+                val filteredList = list.filter { album ->
+                    albumAdapter.albumList.none { it.id == album.id }
+                }
+                if (filteredList.isEmpty()) {
+                    guestHint.visibility = View.VISIBLE
+                    dialog.getButton(DialogInterface.BUTTON_POSITIVE).isEnabled = false
+                } else {
+                    guestHint.visibility = View.GONE
+                    val names = filteredList.map { it.name }
+                    val adapter = ArrayAdapter(
+                        requireContext(),
+                        android.R.layout.simple_dropdown_item_1line,
+                        names
+                    )
+                    dropdownAlbum.setAdapter(adapter)
+                    dialog.getButton(DialogInterface.BUTTON_POSITIVE).isEnabled = true
+
+                    dialog.getButton(DialogInterface.BUTTON_POSITIVE).setOnClickListener {
+                        val selected = dropdownAlbum.text.toString()
+                        val index = names.indexOf(selected)
+                        if (index >= 0) {
+                            // Añadimos el álbum al adaptador y actualizamos la lista
+                            val selectedAlbum = filteredList[index]
+                            val updatedList = albumAdapter.albumList.toMutableList().apply {
+                                add(selectedAlbum)
+                            }
+                            albumAdapter.updateAlbums(updatedList)
+                            dialog.dismiss()
+                        }
+                    }
+                }
+            }
+
+            override fun onFailure(call: Call<List<Album>>, t: Throwable) {
+                Toast.makeText(context, "Error cargando álbumes", Toast.LENGTH_SHORT).show()
+                guestHint.text = "No se pudieron cargar los álbumes."
+                guestHint.visibility = View.VISIBLE
+                dialog.getButton(DialogInterface.BUTTON_POSITIVE).isEnabled = false
+            }
+        })
+    }
+
+
+    private fun showAddPrizeDialog() {
+        val dialogView = layoutInflater.inflate(R.layout.dialog_add_prize, null)
+        val prizeDropdown =
+            dialogView.findViewById<com.google.android.material.textfield.MaterialAutoCompleteTextView>(
+                R.id.dropdownPrize
+            )
+        val inputDate =
+            dialogView.findViewById<com.google.android.material.textfield.TextInputEditText>(R.id.inputPrizeDate)
+                .apply {
+                    val randomCalendar = Calendar.getInstance().apply {
+                        set((1950..2023).random(), (0..11).random(), (1..28).random())
+                    }
+                    setText(
+                        SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(
+                            randomCalendar.time
+                        )
+                    )
+                }
+
+        // Pre-cargar lista de premios
+        ArtistServiceAdapter.getPrizes().enqueue(object : retrofit2.Callback<List<Prize>> {
+            override fun onResponse(
+                call: retrofit2.Call<List<Prize>>,
+                resp: retrofit2.Response<List<Prize>>
+            ) {
+                val list = resp.body().orEmpty()
+                val names =
+                    if (list.isNotEmpty()) list.map { it.name } else listOf("No hay premios disponibles")
+                prizeDropdown.setAdapter(
+                    ArrayAdapter(
+                        requireContext(),
+                        android.R.layout.simple_dropdown_item_1line,
+                        names
+                    )
+                )
+            }
+
+            override fun onFailure(call: retrofit2.Call<List<Prize>>, t: Throwable) {
+                Toast.makeText(
+                    context,
+                    "No se pudieron obtener datos del servidor",
+                    Toast.LENGTH_SHORT
+                ).show()
+            }
+        })
+
+        MaterialAlertDialogBuilder(requireContext())
+            .setTitle("Agregar Premio")
+            .setView(dialogView)
+            .setPositiveButton("Agregar") { _, _ ->
+                val prizeName = prizeDropdown.text.toString()
+                val date = inputDate.text.toString().trim().ifEmpty { null }
+                prizeAdapter.addPrize(prizeName, date)
+            }
+            .setNegativeButton("Cancelar", null)
+            .show()
+    }
+
 
     private fun setupArtistName() {
         var isFirstClick = true
@@ -90,7 +251,6 @@
     }
 
     private fun setupBirthDateCalendar() {
-        // Generar una fecha aleatoria entre 1955 y 2006
         val randomYear = (1955..2006).random()
         val randomMonth = (0..11).random()
         val randomDay = (1..cal.getActualMaximum(Calendar.DAY_OF_MONTH)).random()
Index: app/src/main/res/layout/item_album.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_album.xml b/app/src/main/res/layout/item_album.xml
--- a/app/src/main/res/layout/item_album.xml	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/res/layout/item_album.xml	(date 1746413904185)
@@ -2,14 +2,14 @@
 <com.google.android.material.card.MaterialCardView xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
+    android:layout_width="wrap_content"
     android:layout_height="wrap_content"
     android:layout_margin="8dp"
     app:cardCornerRadius="12dp"
     app:cardElevation="4dp">
 
     <LinearLayout
-        android:layout_width="match_parent"
+        android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:orientation="vertical"
         android:padding="8dp">
Index: app/src/main/java/com/example/vinilosmobileapp/model/dto/ArtistCreateDTO.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/model/dto/ArtistCreateDTO.kt b/app/src/main/java/com/example/vinilosmobileapp/model/dto/ArtistCreateDTO.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/model/dto/ArtistCreateDTO.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/model/dto/ArtistCreateDTO.kt	(date 1746410063044)
@@ -6,3 +6,9 @@
     val description: String,
     val birthDate: String
 )
+
+data class PrizeCreateDTO(
+    val organization: String,
+    val name: String,
+    val description: String
+)
Index: app/src/main/java/com/example/vinilosmobileapp/ui/artist/adapter/PrizeInputAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/ui/artist/adapter/PrizeInputAdapter.kt b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/adapter/PrizeInputAdapter.kt
new file mode 100644
--- /dev/null	(date 1746415524296)
+++ b/app/src/main/java/com/example/vinilosmobileapp/ui/artist/adapter/PrizeInputAdapter.kt	(date 1746415524296)
@@ -0,0 +1,32 @@
+package com.example.vinilosmobileapp.ui.artist.adapter
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.example.vinilosmobileapp.databinding.ItemPrizeBinding
+
+class PrizeInputAdapter(private var items: MutableList<Pair<String, String?>>) :
+    RecyclerView.Adapter<PrizeInputAdapter.VH>() {
+
+    inner class VH(val binding: ItemPrizeBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+        fun bind(prize: Pair<String, String?>) {
+            binding.tvPrizeName.text = prize.first
+            // binding.tvOrganization.text = prize.second ?: ""
+            binding.tvDateAwarded.text = prize.second ?: ""
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int) = VH(
+        ItemPrizeBinding.inflate(LayoutInflater.from(parent.context), parent, false)
+    )
+
+    override fun onBindViewHolder(holder: VH, position: Int) = holder.bind(items[position])
+
+    override fun getItemCount() = items.size
+
+    fun addPrize(name: String, date: String?) {
+        items.add(name to date)
+        notifyItemInserted(items.lastIndex)
+    }
+}
Index: app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistService.kt b/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistService.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistService.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistService.kt	(date 1746410063054)
@@ -2,7 +2,9 @@
 
 import com.example.vinilosmobileapp.model.Artist
 import com.example.vinilosmobileapp.model.ArtistDetail
+import com.example.vinilosmobileapp.model.Prize
 import com.example.vinilosmobileapp.model.dto.ArtistCreateDTO
+import com.example.vinilosmobileapp.model.dto.PrizeCreateDTO
 import retrofit2.Call
 import retrofit2.http.Body
 import retrofit2.http.GET
@@ -18,4 +20,10 @@
 
     @POST("musicians")
     fun createMusician(@Body artist: ArtistCreateDTO): Call<Artist>
+
+    @GET("prizes")
+    fun getPrizes(): Call<List<Prize>>
+
+    @POST("prizes")
+    fun createPrize(@Body dto: PrizeCreateDTO): Call<Prize>
 }
Index: app/src/main/res/layout/dialog_add_prize.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_add_prize.xml b/app/src/main/res/layout/dialog_add_prize.xml
new file mode 100644
--- /dev/null	(date 1746410727680)
+++ b/app/src/main/res/layout/dialog_add_prize.xml	(date 1746410727680)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="24dp">
+
+    <com.google.android.material.textfield.TextInputLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense.ExposedDropdownMenu"
+        android:hint="Premio">
+
+        <com.google.android.material.textfield.MaterialAutoCompleteTextView
+            android:id="@+id/dropdownPrize"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <com.google.android.material.textfield.TextInputLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:hint="Fecha de premiación">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/inputPrizeDate"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:focusable="false" />
+    </com.google.android.material.textfield.TextInputLayout>
+</LinearLayout>
Index: app/src/main/res/layout/dialog_add_album.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_add_album.xml b/app/src/main/res/layout/dialog_add_album.xml
new file mode 100644
--- /dev/null	(date 1746413317049)
+++ b/app/src/main/res/layout/dialog_add_album.xml	(date 1746413317049)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="24dp">
+
+    <com.google.android.material.textfield.TextInputLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense.ExposedDropdownMenu"
+        android:hint="Álbum">
+
+        <com.google.android.material.textfield.MaterialAutoCompleteTextView
+            android:id="@+id/dropdown_album"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <!-- Hint para cuando no haya collectors -->
+    <TextView
+        android:id="@+id/guest_hint"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="10dp"
+        android:layout_marginTop="8dp"
+        android:text="No hay álbums creados todavía,\n Crea uno nuevo."
+        android:textColor="@color/black"
+        android:textSize="12sp"
+        android:visibility="visible" />
+
+</LinearLayout>
Index: app/src/main/java/com/example/vinilosmobileapp/model/ArtistDetail.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/model/ArtistDetail.kt b/app/src/main/java/com/example/vinilosmobileapp/model/ArtistDetail.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/model/ArtistDetail.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/model/ArtistDetail.kt	(date 1746410063057)
@@ -16,3 +16,10 @@
     val organization: String,
     val awardedDate: String
 )
+
+data class Prize(
+    val id: Int,
+    val organization: String,
+    val name: String,
+    val description: String
+)
Index: app/src/main/java/com/example/vinilosmobileapp/utils/randomDataProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/utils/randomDataProvider.kt b/app/src/main/java/com/example/vinilosmobileapp/utils/randomDataProvider.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/utils/randomDataProvider.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/utils/randomDataProvider.kt	(date 1746410063051)
@@ -34,7 +34,7 @@
 
     val genreOptions = listOf("Classical", "Salsa", "Rock", "Folk")
 
-    val artistOptions = listOf(
+    val recordLabels = listOf(
         "Sony Music",
         "EMI",
         "Discos Fuentes",
@@ -42,6 +42,30 @@
         "Fania Records"
     )
 
+    val organizations = listOf(
+        "Music Awards",
+        "Global Music",
+        "World Sound",
+        "International Music Fest",
+        "Harmony Awards"
+    )
+
+    val awardNames = listOf(
+        "Best New Artist",
+        "Album of the Year",
+        "Song of the Year",
+        "Best Live Performance",
+        "Lifetime Achievement"
+    )
+
+    val descriptions = listOf(
+        "Awarded to the best new artist of the year.",
+        "Awarded to the best album of the year.",
+        "Awarded to the top song of the year.",
+        "Awarded to the artist with the best live performance of the year.",
+        "Awarded to an artist for their outstanding contributions to the music industry."
+    )
+
     val artistName = listOf(
         "Michael Jackson",
         "Madonna",
Index: app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistServiceAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistServiceAdapter.kt b/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistServiceAdapter.kt
--- a/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistServiceAdapter.kt	(revision a97fcc3770353cbbd845ac972fe1cb9d28f1e85e)
+++ b/app/src/main/java/com/example/vinilosmobileapp/datasource/remote/ArtistServiceAdapter.kt	(date 1746410063047)
@@ -2,7 +2,9 @@
 
 import com.example.vinilosmobileapp.model.Artist
 import com.example.vinilosmobileapp.model.ArtistDetail
+import com.example.vinilosmobileapp.model.Prize
 import com.example.vinilosmobileapp.model.dto.ArtistCreateDTO
+import com.example.vinilosmobileapp.model.dto.PrizeCreateDTO
 import retrofit2.Call
 
 object ArtistServiceAdapter {
@@ -15,4 +17,8 @@
 
     fun createArtist(dto: ArtistCreateDTO): Call<Artist> =
         service.createMusician(dto)
+
+    fun getPrizes(): Call<List<Prize>> = service.getPrizes()
+
+    fun createPrize(dto: PrizeCreateDTO): Call<Prize> = service.createPrize(dto)
 }
